@model IEnumerable<MakaevFilmTestApp.ViewModels.ActorLike>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Сортировка
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <a class="dropdown-item" asp-action="Index">По алфавиту</a>
        <a class="dropdown-item" asp-action="ViewByPopular">По популярности</a>

    </div>
</div>
<table class="table">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.ActorId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Like)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ActorId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Actor.Lastname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Actor.ActorDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td class="actor_rate">
                    @Html.DisplayFor(modelItem => item.Actor.Rate)
                </td>
                <td>
                    @if (item.Like)
                    {
                        <div class="like_on like_area" value="@item.ActorId"></div>
                    }
                    else
                    {
                        <div class="like_off like_area" value="@item.ActorId"></div>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>

</table>
<div id="output"></div>
<input type="button" name="name" value="123" />
<script type="text/javascript">
    $(document).ready(function () {
        $(".like_area").click(function () {
            var activeElement = $(this);
            console.log(activeElement);
            var actorLike = {
                ActorId: activeElement.attr("value") 
            };
            console.log(activeElement.attr("value"));
            $.ajax({
                url: '@Url.Action("AjaxTest", "ActorLikes")', // try to use Url Helper when possible
                type: 'POST', // use Get for [HttpGet] action or POST for [HttpPost]
                //contentType: 'application/json', not needed
                //dataType: 'jsonp', jsonp is for sending to a site other than the current one..
                data: actorLike, // no need to stringify
                success: function (result) {
                  
                    changeLikeImage(activeElement);
                   
                }
            });

        });
    });
    function changeLikeImage(element) {
        var likeOn = "like_on";
        var likeOff = "like_off";
        var actorRateDiv=element.parent().parent().children("td.actor_rate");
        if (element.hasClass(likeOn)) {
            element.removeClass(likeOn);
            element.addClass(likeOff);
            actorRateDiv.html(parseInt(actorRateDiv.html()) - 1);
        } else {
            element.removeClass(likeOff);
            element.addClass(likeOn);
            actorRateDiv.html(parseInt(actorRateDiv.html()) + 1)
        }
        
    }
</script>
